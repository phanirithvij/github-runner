name: 🟢 action_test

on:
  # 该事件可以通过 API 触发
  repository_dispatch:
    types:
      - mypy_event_type.test_app

  # 手动触发时输入参数
  workflow_dispatch:
    inputs:
      ARGS:
        description: "排班参数用逗号分隔: 0 表示休息 1 表示上班 2 表示夜班 3 表示备班"
        required: false
        type: string
        default: ""

      SIMPLE_RUN:
        description: "是否简单运行（不安装程序依赖和字体）"
        type: boolean
        required: false
        default: true

      ENV_PUBLISH_PLATFORMS:
        type: string
        description: "选择发布平台，用 ',' 分割（不带空格，可选项: douyin,wechat,xiaohongshu）"
        required: false
        default: "douyin,wechat"

      ENV_PUBLISH_MOD:
        type: choice
        description: "选择发布时间模式"
        required: false
        default: "timing"
        options:
          - "now"
          - "timing"

      ENV_DOUYIN_ACCOUNT:
        type: choice
        description: "选择抖音账号"
        required: false
        default: "大号"
        options:
          - "大号"
          - "中号"
          - "测试账号"

      DEBUG:
        description: "是否 detach 到虚拟机"
        type: boolean
        required: false
        default: false

env:
  ENV_RUN_ENVIRONMENT: pytest
  APP_BASE_PATH: mypy/apps
  # 把 github action 的 input 设置到环境变量中

jobs:
  run:
    # NOTICE: 如果您是通过 repository_dispatch 触发工作流，需要使用 github.event.client_payload.[参数] 来传递参数
    uses: wordsworth-mk/github-runner/.github/workflows/run.yml@main
    with:
      env: ${{ github.event.inputs.ENV_PUBLISH_MOD }}
      #ENV_OBJ:
      #  ENV_PUBLISH_MOD: ${{ github.event.inputs.ENV_PUBLISH_MOD }}
      #  ENV_PUBLISH_PLATFORMS: ${{ github.event.inputs.ENV_PUBLISH_PLATFORMS }}
      #  ENV_DOUYIN_ACCOUNT: ${{ github.event.inputs.ENV_DOUYIN_ACCOUNT }}
      APP: test_app
      ARGS: ${{ inputs.ARGS || github.event.client_payload.ARGS }}
      SIMPLE_RUN: ${{ inputs.SIMPLE_RUN || github.event.client_payload.SIMPLE_RUN }}
      # COMMIT_CHANGE: ${{ inputs.COMMIT_CHANGE || github.event.client_payload.COMMIT_CHANGE || false }}
      COMMIT_CHANGE: false
      DEBUG: ${{ inputs.DEBUG }}
    secrets:
      MYPY_ACCESS_TOKEN: ${{ secrets.MYPY_ACCESS_TOKEN }}
